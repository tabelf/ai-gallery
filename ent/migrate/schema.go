// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoreAccountColumns holds the columns for the "core_account" table.
	CoreAccountColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "username", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "password", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "nickname", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "role", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "status", Type: field.TypeInt, Nullable: true},
	}
	// CoreAccountTable holds the schema information for the "core_account" table.
	CoreAccountTable = &schema.Table{
		Name:       "core_account",
		Columns:    CoreAccountColumns,
		PrimaryKey: []*schema.Column{CoreAccountColumns[0]},
	}
	// BaseSchemasColumns holds the columns for the "base_schemas" table.
	BaseSchemasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// BaseSchemasTable holds the schema information for the "base_schemas" table.
	BaseSchemasTable = &schema.Table{
		Name:       "base_schemas",
		Columns:    BaseSchemasColumns,
		PrimaryKey: []*schema.Column{BaseSchemasColumns[0]},
	}
	// CoreSettingColumns holds the columns for the "core_setting" table.
	CoreSettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "config_key", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "config_value", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "mark", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "operate_id", Type: field.TypeInt, Nullable: true},
		{Name: "operate_name", Type: field.TypeString, Nullable: true, Size: 50},
	}
	// CoreSettingTable holds the schema information for the "core_setting" table.
	CoreSettingTable = &schema.Table{
		Name:       "core_setting",
		Columns:    CoreSettingColumns,
		PrimaryKey: []*schema.Column{CoreSettingColumns[0]},
	}
	// CoreTaskColumns holds the columns for the "core_task" table.
	CoreTaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "prompt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "negative_prompt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "height", Type: field.TypeFloat32, Nullable: true},
		{Name: "img_size", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "seed", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "sampler_name", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "steps", Type: field.TypeInt, Nullable: true},
		{Name: "cfg_scale", Type: field.TypeInt, Nullable: true},
		{Name: "batch_size", Type: field.TypeInt, Nullable: true},
		{Name: "total", Type: field.TypeInt, Nullable: true},
		{Name: "sd_model_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "sd_model_hash", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "sd_vae_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "sd_vae_hash", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "job_timestamp", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "version", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "grid_image_url", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "status", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "author_id", Type: field.TypeInt, Nullable: true},
		{Name: "author_name", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "ref_images", Type: field.TypeJSON, Nullable: true},
		{Name: "store", Type: field.TypeString, Nullable: true},
		{Name: "count", Type: field.TypeInt, Nullable: true},
		{Name: "has_excellent", Type: field.TypeBool, Nullable: true},
		{Name: "extra", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// CoreTaskTable holds the schema information for the "core_task" table.
	CoreTaskTable = &schema.Table{
		Name:       "core_task",
		Columns:    CoreTaskColumns,
		PrimaryKey: []*schema.Column{CoreTaskColumns[0]},
	}
	// CoreTaskDetailColumns holds the columns for the "core_task_detail" table.
	CoreTaskDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "task_id", Type: field.TypeInt, Nullable: true},
		{Name: "image_url", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "has_excellent", Type: field.TypeBool, Nullable: true},
	}
	// CoreTaskDetailTable holds the schema information for the "core_task_detail" table.
	CoreTaskDetailTable = &schema.Table{
		Name:       "core_task_detail",
		Columns:    CoreTaskDetailColumns,
		PrimaryKey: []*schema.Column{CoreTaskDetailColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoreAccountTable,
		BaseSchemasTable,
		CoreSettingTable,
		CoreTaskTable,
		CoreTaskDetailTable,
	}
)

func init() {
	CoreAccountTable.Annotation = &entsql.Annotation{
		Table: "core_account",
	}
	CoreSettingTable.Annotation = &entsql.Annotation{
		Table: "core_setting",
	}
	CoreTaskTable.Annotation = &entsql.Annotation{
		Table: "core_task",
	}
	CoreTaskDetailTable.Annotation = &entsql.Annotation{
		Table: "core_task_detail",
	}
}
