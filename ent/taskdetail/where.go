// Code generated by ent, DO NOT EDIT.

package taskdetail

import (
	"ai-gallery/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldDeleteTime, v))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldTaskID, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldImageURL, v))
}

// HasExcellent applies equality check predicate on the "has_excellent" field. It's identical to HasExcellentEQ.
func HasExcellent(v bool) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldHasExcellent, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldUpdateTime, v))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotNull(FieldDeleteTime))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldTaskID, vs...))
}

// TaskIDGT applies the GT predicate on the "task_id" field.
func TaskIDGT(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldTaskID, v))
}

// TaskIDGTE applies the GTE predicate on the "task_id" field.
func TaskIDGTE(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldTaskID, v))
}

// TaskIDLT applies the LT predicate on the "task_id" field.
func TaskIDLT(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldTaskID, v))
}

// TaskIDLTE applies the LTE predicate on the "task_id" field.
func TaskIDLTE(v int) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldTaskID, v))
}

// TaskIDIsNil applies the IsNil predicate on the "task_id" field.
func TaskIDIsNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIsNull(FieldTaskID))
}

// TaskIDNotNil applies the NotNil predicate on the "task_id" field.
func TaskIDNotNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotNull(FieldTaskID))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLIsNil applies the IsNil predicate on the "image_url" field.
func ImageURLIsNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIsNull(FieldImageURL))
}

// ImageURLNotNil applies the NotNil predicate on the "image_url" field.
func ImageURLNotNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotNull(FieldImageURL))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldContainsFold(FieldImageURL, v))
}

// HasExcellentEQ applies the EQ predicate on the "has_excellent" field.
func HasExcellentEQ(v bool) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldEQ(FieldHasExcellent, v))
}

// HasExcellentNEQ applies the NEQ predicate on the "has_excellent" field.
func HasExcellentNEQ(v bool) predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNEQ(FieldHasExcellent, v))
}

// HasExcellentIsNil applies the IsNil predicate on the "has_excellent" field.
func HasExcellentIsNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldIsNull(FieldHasExcellent))
}

// HasExcellentNotNil applies the NotNil predicate on the "has_excellent" field.
func HasExcellentNotNil() predicate.TaskDetail {
	return predicate.TaskDetail(sql.FieldNotNull(FieldHasExcellent))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TaskDetail) predicate.TaskDetail {
	return predicate.TaskDetail(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TaskDetail) predicate.TaskDetail {
	return predicate.TaskDetail(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TaskDetail) predicate.TaskDetail {
	return predicate.TaskDetail(sql.NotPredicates(p))
}
