// Code generated by ent, DO NOT EDIT.

package setting

import (
	"ai-gallery/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldDeleteTime, v))
}

// ConfigKey applies equality check predicate on the "config_key" field. It's identical to ConfigKeyEQ.
func ConfigKey(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldConfigKey, v))
}

// ConfigValue applies equality check predicate on the "config_value" field. It's identical to ConfigValueEQ.
func ConfigValue(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldConfigValue, v))
}

// Mark applies equality check predicate on the "mark" field. It's identical to MarkEQ.
func Mark(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldMark, v))
}

// OperateID applies equality check predicate on the "operate_id" field. It's identical to OperateIDEQ.
func OperateID(v int) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldOperateID, v))
}

// OperateName applies equality check predicate on the "operate_name" field. It's identical to OperateNameEQ.
func OperateName(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldOperateName, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldUpdateTime, v))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldDeleteTime))
}

// ConfigKeyEQ applies the EQ predicate on the "config_key" field.
func ConfigKeyEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldConfigKey, v))
}

// ConfigKeyNEQ applies the NEQ predicate on the "config_key" field.
func ConfigKeyNEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldConfigKey, v))
}

// ConfigKeyIn applies the In predicate on the "config_key" field.
func ConfigKeyIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldConfigKey, vs...))
}

// ConfigKeyNotIn applies the NotIn predicate on the "config_key" field.
func ConfigKeyNotIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldConfigKey, vs...))
}

// ConfigKeyGT applies the GT predicate on the "config_key" field.
func ConfigKeyGT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldConfigKey, v))
}

// ConfigKeyGTE applies the GTE predicate on the "config_key" field.
func ConfigKeyGTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldConfigKey, v))
}

// ConfigKeyLT applies the LT predicate on the "config_key" field.
func ConfigKeyLT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldConfigKey, v))
}

// ConfigKeyLTE applies the LTE predicate on the "config_key" field.
func ConfigKeyLTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldConfigKey, v))
}

// ConfigKeyContains applies the Contains predicate on the "config_key" field.
func ConfigKeyContains(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContains(FieldConfigKey, v))
}

// ConfigKeyHasPrefix applies the HasPrefix predicate on the "config_key" field.
func ConfigKeyHasPrefix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasPrefix(FieldConfigKey, v))
}

// ConfigKeyHasSuffix applies the HasSuffix predicate on the "config_key" field.
func ConfigKeyHasSuffix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasSuffix(FieldConfigKey, v))
}

// ConfigKeyIsNil applies the IsNil predicate on the "config_key" field.
func ConfigKeyIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldConfigKey))
}

// ConfigKeyNotNil applies the NotNil predicate on the "config_key" field.
func ConfigKeyNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldConfigKey))
}

// ConfigKeyEqualFold applies the EqualFold predicate on the "config_key" field.
func ConfigKeyEqualFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEqualFold(FieldConfigKey, v))
}

// ConfigKeyContainsFold applies the ContainsFold predicate on the "config_key" field.
func ConfigKeyContainsFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContainsFold(FieldConfigKey, v))
}

// ConfigValueEQ applies the EQ predicate on the "config_value" field.
func ConfigValueEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldConfigValue, v))
}

// ConfigValueNEQ applies the NEQ predicate on the "config_value" field.
func ConfigValueNEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldConfigValue, v))
}

// ConfigValueIn applies the In predicate on the "config_value" field.
func ConfigValueIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldConfigValue, vs...))
}

// ConfigValueNotIn applies the NotIn predicate on the "config_value" field.
func ConfigValueNotIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldConfigValue, vs...))
}

// ConfigValueGT applies the GT predicate on the "config_value" field.
func ConfigValueGT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldConfigValue, v))
}

// ConfigValueGTE applies the GTE predicate on the "config_value" field.
func ConfigValueGTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldConfigValue, v))
}

// ConfigValueLT applies the LT predicate on the "config_value" field.
func ConfigValueLT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldConfigValue, v))
}

// ConfigValueLTE applies the LTE predicate on the "config_value" field.
func ConfigValueLTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldConfigValue, v))
}

// ConfigValueContains applies the Contains predicate on the "config_value" field.
func ConfigValueContains(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContains(FieldConfigValue, v))
}

// ConfigValueHasPrefix applies the HasPrefix predicate on the "config_value" field.
func ConfigValueHasPrefix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasPrefix(FieldConfigValue, v))
}

// ConfigValueHasSuffix applies the HasSuffix predicate on the "config_value" field.
func ConfigValueHasSuffix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasSuffix(FieldConfigValue, v))
}

// ConfigValueIsNil applies the IsNil predicate on the "config_value" field.
func ConfigValueIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldConfigValue))
}

// ConfigValueNotNil applies the NotNil predicate on the "config_value" field.
func ConfigValueNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldConfigValue))
}

// ConfigValueEqualFold applies the EqualFold predicate on the "config_value" field.
func ConfigValueEqualFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEqualFold(FieldConfigValue, v))
}

// ConfigValueContainsFold applies the ContainsFold predicate on the "config_value" field.
func ConfigValueContainsFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContainsFold(FieldConfigValue, v))
}

// MarkEQ applies the EQ predicate on the "mark" field.
func MarkEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldMark, v))
}

// MarkNEQ applies the NEQ predicate on the "mark" field.
func MarkNEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldMark, v))
}

// MarkIn applies the In predicate on the "mark" field.
func MarkIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldMark, vs...))
}

// MarkNotIn applies the NotIn predicate on the "mark" field.
func MarkNotIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldMark, vs...))
}

// MarkGT applies the GT predicate on the "mark" field.
func MarkGT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldMark, v))
}

// MarkGTE applies the GTE predicate on the "mark" field.
func MarkGTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldMark, v))
}

// MarkLT applies the LT predicate on the "mark" field.
func MarkLT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldMark, v))
}

// MarkLTE applies the LTE predicate on the "mark" field.
func MarkLTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldMark, v))
}

// MarkContains applies the Contains predicate on the "mark" field.
func MarkContains(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContains(FieldMark, v))
}

// MarkHasPrefix applies the HasPrefix predicate on the "mark" field.
func MarkHasPrefix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasPrefix(FieldMark, v))
}

// MarkHasSuffix applies the HasSuffix predicate on the "mark" field.
func MarkHasSuffix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasSuffix(FieldMark, v))
}

// MarkIsNil applies the IsNil predicate on the "mark" field.
func MarkIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldMark))
}

// MarkNotNil applies the NotNil predicate on the "mark" field.
func MarkNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldMark))
}

// MarkEqualFold applies the EqualFold predicate on the "mark" field.
func MarkEqualFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEqualFold(FieldMark, v))
}

// MarkContainsFold applies the ContainsFold predicate on the "mark" field.
func MarkContainsFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContainsFold(FieldMark, v))
}

// OperateIDEQ applies the EQ predicate on the "operate_id" field.
func OperateIDEQ(v int) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldOperateID, v))
}

// OperateIDNEQ applies the NEQ predicate on the "operate_id" field.
func OperateIDNEQ(v int) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldOperateID, v))
}

// OperateIDIn applies the In predicate on the "operate_id" field.
func OperateIDIn(vs ...int) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldOperateID, vs...))
}

// OperateIDNotIn applies the NotIn predicate on the "operate_id" field.
func OperateIDNotIn(vs ...int) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldOperateID, vs...))
}

// OperateIDGT applies the GT predicate on the "operate_id" field.
func OperateIDGT(v int) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldOperateID, v))
}

// OperateIDGTE applies the GTE predicate on the "operate_id" field.
func OperateIDGTE(v int) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldOperateID, v))
}

// OperateIDLT applies the LT predicate on the "operate_id" field.
func OperateIDLT(v int) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldOperateID, v))
}

// OperateIDLTE applies the LTE predicate on the "operate_id" field.
func OperateIDLTE(v int) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldOperateID, v))
}

// OperateIDIsNil applies the IsNil predicate on the "operate_id" field.
func OperateIDIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldOperateID))
}

// OperateIDNotNil applies the NotNil predicate on the "operate_id" field.
func OperateIDNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldOperateID))
}

// OperateNameEQ applies the EQ predicate on the "operate_name" field.
func OperateNameEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEQ(FieldOperateName, v))
}

// OperateNameNEQ applies the NEQ predicate on the "operate_name" field.
func OperateNameNEQ(v string) predicate.Setting {
	return predicate.Setting(sql.FieldNEQ(FieldOperateName, v))
}

// OperateNameIn applies the In predicate on the "operate_name" field.
func OperateNameIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldIn(FieldOperateName, vs...))
}

// OperateNameNotIn applies the NotIn predicate on the "operate_name" field.
func OperateNameNotIn(vs ...string) predicate.Setting {
	return predicate.Setting(sql.FieldNotIn(FieldOperateName, vs...))
}

// OperateNameGT applies the GT predicate on the "operate_name" field.
func OperateNameGT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGT(FieldOperateName, v))
}

// OperateNameGTE applies the GTE predicate on the "operate_name" field.
func OperateNameGTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldGTE(FieldOperateName, v))
}

// OperateNameLT applies the LT predicate on the "operate_name" field.
func OperateNameLT(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLT(FieldOperateName, v))
}

// OperateNameLTE applies the LTE predicate on the "operate_name" field.
func OperateNameLTE(v string) predicate.Setting {
	return predicate.Setting(sql.FieldLTE(FieldOperateName, v))
}

// OperateNameContains applies the Contains predicate on the "operate_name" field.
func OperateNameContains(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContains(FieldOperateName, v))
}

// OperateNameHasPrefix applies the HasPrefix predicate on the "operate_name" field.
func OperateNameHasPrefix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasPrefix(FieldOperateName, v))
}

// OperateNameHasSuffix applies the HasSuffix predicate on the "operate_name" field.
func OperateNameHasSuffix(v string) predicate.Setting {
	return predicate.Setting(sql.FieldHasSuffix(FieldOperateName, v))
}

// OperateNameIsNil applies the IsNil predicate on the "operate_name" field.
func OperateNameIsNil() predicate.Setting {
	return predicate.Setting(sql.FieldIsNull(FieldOperateName))
}

// OperateNameNotNil applies the NotNil predicate on the "operate_name" field.
func OperateNameNotNil() predicate.Setting {
	return predicate.Setting(sql.FieldNotNull(FieldOperateName))
}

// OperateNameEqualFold applies the EqualFold predicate on the "operate_name" field.
func OperateNameEqualFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldEqualFold(FieldOperateName, v))
}

// OperateNameContainsFold applies the ContainsFold predicate on the "operate_name" field.
func OperateNameContainsFold(v string) predicate.Setting {
	return predicate.Setting(sql.FieldContainsFold(FieldOperateName, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Setting) predicate.Setting {
	return predicate.Setting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Setting) predicate.Setting {
	return predicate.Setting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Setting) predicate.Setting {
	return predicate.Setting(sql.NotPredicates(p))
}
